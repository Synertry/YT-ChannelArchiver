# All-in-one config, without embedding subs
# yt-dlp config file for archiving YouTube videos in best quality including all metadata
# See https://github.com/yt-dlp/yt-dlp#configuration



### Authentication ###
# Your authentication either cookies or user and pass, I recommend cookies https://github.com/ytdl-org/youtube-dl#how-do-i-pass-cookies-to-youtube-dl
--cookies "$HOME/youtube.com_cookies.txt"

# If you don't want to hassle with cookies
# --username youraccount@gmail.com --password yourpassword


### Download Behavior ###
# Where to store the video IDs or control the videos to download
--download-archive "$HOME/YouTube-Video_IDs.txt"

# Bypass possible agent restrictions, by spoofing using a browser
--user-agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36'

# For long running tasks, especially afk or on servers, you don't need this visual information
--no-progress

# On errors retry up to 20 times but don't stop if it fails
--retries 20 --ignore-errors 

# Default is 1, so apply more concurrent connections for videos download
--concurrent-fragments 4


### Video Format ###
# This is the default format conf of yt-dlp.
# You could just use b or best but the preformated videos are actually worse in quality and take up more space.
--format 'bv*+ba/b'

# Combined with the above, this is the best format you for quality you could get
--merge-output-format mkv

# Merging vp9 and opus, can give conversion errors and the video will be skipped, so the patched ffmpeg is important for best quality merge
--ffmpeg-location "$HOME/yt-dlp/ffmpeg-patched/bin"

# 0 (best) 5 (default) 10 (worse)
--audio-quality 0


### Metadata ###
# Nice to have so you know where original the video link is or "was" in case of archiving
--write-url-link --write-webloc-link --write-desktop-link

# all additional information besides live chat, if you just want the video you won't need this
--write-info-json --write-all-thumbnail --write-description --write-comments --write-playlist-metafiles

# subtitles
--sub-langs all --write-subs --sub-format 'ass/srt/best'

# For share ready video embed subs
# If you don't want or need this you can comment it out and remove "",-live_chat" in the option above. Which in whole saves a second execution of yt-dlp
# --embed-subs

# Share ready
--embed-thumbnail --embed-metadata

# download from earliest to latest
--playlist-reverse

# As this conf file specialises on archiving /videos and /membership, we don't need a duplicate playlist of the download
--no-playlist --no-write-playlist-metafiles


### Save Path ###
# Path where to download change this to where you want your processed end data to be
# e.g. external drive on Windows auto-mounted in WSL "/mnt/d"
--paths "$HOME/ytp-dlp/download"

# temp locations, deleteable afterwards
--paths "temp:$HOME/yt-dlp/tmp"

# all templated output file types supported, this is my personal preference backed up by torrenting
--output '%(channel)s/%(upload_date)s_%(title)s/%(title)s [%(id)s][%(vcodec)s %(resolution)s %(acodec)s].%(ext)s'
--output 'subtitle:%(channel)s/%(upload_date)s_%(title)s/subs/%(title)s [%(id)s].%(ext)s'
--output 'thumbnail:%(channel)s/%(upload_date)s_%(title)s/thumbs/%(title)s [%(id)s](thumb).%(ext)s'
--output 'description:%(channel)s/%(upload_date)s_%(title)s/%(title)s [%(id)s].%(ext)s'
--output 'infojson:%(channel)s/%(upload_date)s_%(title)s/%(title)s [%(id)s].%(ext)s'
--output 'link:%(channel)s/%(upload_date)s_%(title)s/links/%(title)s [%(id)s](link).%(ext)s'
--output 'chapter:%(channel)s/%(upload_date)s_%(title)s/chapter/%(title)s [%(id)s](chapter).%(ext)s'
--output 'pl_thumbnail:%(channel)s/%(upload_date)s_%(title)s/pl/%(title)s [%(id)s](thumb).%(ext)s'
--output 'pl_description:%(channel)s/%(upload_date)s_%(title)s/pl/%(title)s [%(id)s].%(ext)s'
--output 'pl_infojson:%(channel)s/%(upload_date)s_%(title)s/pl/%(title)s [%(id)s].%(ext)s'
--output 'pl_video:%(channel)s/%(upload_date)s_%(title)s/pl/%(title)s [%(id)s][%(vcodec)s %(resolution)s %(acodec)s].%(ext)s'